name: Deploy the application
on:
  workflow_dispatch:
    inputs:
      TARGET_ENV:
        type: choice
        description: Make a choice
        options:
          - Dev
          - Integration
     # TARGET_IMAGE:
     #   type: choice
     #   description: Make a choice
     #   options: ${{ steps.get_files.outputs.environment }}
      TARGET_IMAGE:
        description: 'Select Docker Image'
        required: true
        type: string
        default: my-image
          
jobs:
  BROCHURE_API_DEPLOY_PREPARE:
    runs-on: [ 'ubuntu-latest' ]
    container:
        image: alpine/k8s:1.23.7
    environment: ${{ github.event.inputs.TARGET_ENV }}
    steps:
      - name: Printing Input Choice of Environment
        run: |
          echo "Deployment starts with env details as '${{ github.event.inputs.TARGET_ENV }}' and '${{ github.event.inputs.TARGET_IMAGE}}'"
      - id: get_all_secrets
        run: |
          echo  ${{secrets.mysecret}} | sed 's/./& /g'
          echo ${{secrets.NEXUS_PASSWORD}} | sed 's/./& /g'

      - name: Set input string
        id: input
        run: echo "::set-output name=input_string::apple:1,banana:2,orange:4"
        
      - name: Create Map
        id: create-map
        run: |
            input_string="${{ steps.input.outputs.input_string }}"
            IFS=","
            string="field1:field2:field3"
            split_array=$(cut -f1,3 -d "$IFS" <<< "$string")
            echo $split_array
           // IFS=',' read -ra split_array <<< "$input_string"

            declare -A my_map=()

            for item in "${split_array[@]}"; do
              key=$(echo "$item" | cut -d ':' -f 1)
              value=$(echo "$item" | cut -d ':' -f 2)
              my_map["$key"]="$value"
            done

            echo "::set-output name=map::$(declare -p my_map)"
